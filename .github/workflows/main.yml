name: CL

on: [push, workflow_dispatch]

jobs:
  build_1:

    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ./
    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
    - name: Enable Firewall for Remote Desktop
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - name: Set User Authentication
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    - name: Set Runner Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Create ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 3389

  build_2:
    needs: build_1
    runs-on: windows-latest

    steps:
    - name: Re-authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Recreate ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 3389
